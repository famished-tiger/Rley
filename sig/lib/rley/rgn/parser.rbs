module Rley
  module RGN
    # A RRN (Rley Rule Notation) parser that produce concrete parse trees.
    # Concrete parse trees are the default kind of parse tree
    # generated by the Rley library.
    # They consist of two node types only:
    # - NonTerminalNode
    # - TerminalNode
    # A NonTerminalNode has zero or more child nodes (called subnodes)
    # A TerminalNode is leaf node, that is, it has no child node.
    # While concrete parse tree nodes can be generated out of the box,
    # they have the following drawbacks:
    # - Generic node classes that aren't always suited for the needs of
    #     the language being processing.
    # - Concrete parse tree tend to be deeply nested, which may complicate
    #   further processing.
    class Parser
      # Create a Rley facade object
      @engine: Rley::Engine

      # @return [Rley::Engine] A facade object for the Rley parsing library
      attr_reader engine: Rley::Engine

      def initialize: () -> void

      # Parse the given RGN snippet into a parse tree.
      # @param source [String] Snippet to parse
      # @return [Rley::ParseTree] A parse tree equivalent to the RGN input.
      def parse: (String source) -> PTree::ParseTree
    end
  end
end
