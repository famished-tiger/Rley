module Rley
  # Namespace dedicated to parse tree formatters.
  module Formatter
    # A formatter class that generates the labelled bracket notation (LBN)
    # representation of a parse tree.
    # The output can be then fed to an application or library that is
    # capable of displaying parse tree diagrams.
    # For Ruby developers, there is RSyntaxTree by Yoichiro Hasebe.
    # (accessible via: https://yohasebe.com/rsyntaxtree/)
    class BracketNotation < BaseFormatter
      # Method called by a ParseTreeVisitor to which the formatter subscribed.
      # Notification of a visit event: the visitor is about to visit
      # a non-terminal node
      # @param aNonTerm [NonTerminalNode]
      def before_non_terminal: (PTree::NonTerminalNode aNonTerm) -> Integer

      # Method called by a ParseTreeVisitor to which the formatter subscribed.
      # Notification of a visit event: the visitor is about to visit
      # a terminal node
      # @param aTerm [TerminalNode]
      def before_terminal: (PTree::TerminalNode aTerm) -> Integer

      # Method called by a ParseTreeVisitor to which the formatter subscribed.
      # Notification of a visit event: the visitor completed the visit of
      # a terminal node.
      # @param aTerm [TerminalNode]
      def after_terminal: (PTree::TerminalNode aTerm) -> Integer

      # Method called by a ParseTreeVisitor to which the formatter subscribed.
      # Notification of a visit event: the visitor completed the visit of
      # a non-terminal node
      # @param _nonterm [NonTerminalNode]
      def after_non_terminal: (PTree::NonTerminalNode _nonterm) -> Integer

      private

      def write: (untyped aText) -> Integer
    end
  end
end
