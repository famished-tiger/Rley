module Rley
  module SPPF
    # Abstract class. The generalization for nodes that have
    # children node(s).
    class CompositeNode < SPPFNode
      @subnodes: Array[SPPFNode]

      @key: String

      # @return [Array<SPFFNode>] Sub-nodes (children).
      attr_reader subnodes: Array[SPPFNode]

      alias children subnodes

      # Constructor
      # @param aRange [Lexical::TokenRange]
      def initialize: (Lexical::TokenRange aRange) -> void

      # Add a sub-node (child) to this one.
      # @param aSubnode [SPPFNode]
      def add_subnode: (SPPFNode aSubnode) -> Array[SPPFNode]

      # @return [String] a text representation of the node.
      def inspect: () -> String

      # @return [String]
      def key: () -> String
    end
  end
end
